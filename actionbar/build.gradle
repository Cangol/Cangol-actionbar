
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:support-v13:13.0.0+'
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.0"
    defaultConfig {
        consumerProguardFiles 'proguard-rules.txt'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}



// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

version = properties.getProperty("LIBRARY_VERSION")
group=properties.getProperty("GROUP_ID")

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name properties.getProperty("ARTIFACT_NAME")
                description properties.getProperty("LIBRARY_DESCRIPTION")
                url properties.getProperty("SITE_URL")

                // Set your license
                licenses {
                    license {
                        name properties.getProperty("LICENSE_NAME")
                        url properties.getProperty("LICENSE_URL")
                    }
                }
                developers {
                    developer {
                        id properties.getProperty("DEVELOPER_ID")
                        name properties.getProperty("DEVELOPER_NAME")
                        email properties.getProperty("DEVELOPER_EMAIL")
                    }
                }
                scm {
                    connection properties.getProperty("GIT_URL")
                    developerConnection properties.getProperty("GIT_URL")
                    url properties.getProperty("SITE_URL")

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = properties.getProperty("BINTRAY_USER")
    key = properties.getProperty("BINTRAY_APIKEY")

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = properties.getProperty("LIBRARY_NAME")
        desc = properties.getProperty("LIBRARY_DESCRIPTION")
        websiteUrl = properties.getProperty("SITE_URL")
        vcsUrl = properties.getProperty("GIT_URL")
        licenses = ["Apache-2.0"]
        labels = ['android','actionbar','custom actionbar']
        publish = true
        publicDownloadNumbers = true
        version {
            desc = properties.getProperty("LIBRARY_DESCRIPTION")
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("BINTRAY_GPG_PASSWORD")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
